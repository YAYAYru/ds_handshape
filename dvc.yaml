stages:

  #video2skelet:
  #  cmd: python3 big/src/stages/video2skelet.py params.yaml
  #  deps:
  #  - big/src/stages/video2skelet.py
  #  - ${video2skelet.deps.path_video_folders}
  #  params:
  #  - video2skelet.bigdata
  #  outs:
  #  - ${video2skelet.outs.path_json_xyz_folders}

  json2csv:
    cmd: python3 big/src/stages/json2csv.py params.yaml
    deps:
    - big/src/stages/json2csv.py
    - ${json2csv.deps.path_folder_csv}
    - ${json2csv.deps.path_json_xyz_folders}
    outs:
    - ${json2csv.outs.path_csv}
  
  xyz2angle:
    cmd: python3 big/src/stages/xyz2angle.py params.yaml
    deps:
    - big/src/stages/xyz2angle.py
    - ${xyz2angle.deps.path_xyz_63f_csv}
    outs:
    - ${xyz2angle.outs.path_angle_19f_csv}

  select_label:
    cmd: python3 big/src/stages/select_label.py params.yaml
    deps:
    - big/src/stages/select_label.py
    - ${select_label.deps.path_fsw_csv}
    params:
    - select_label.list_fsw_orientation
    outs:
    - ${select_label.outs.path_fsw_handshape_csv}
  
  reduce_label:
    cmd: python3 big/src/stages/reduce_label.py params.yaml
    deps:
    - big/src/stages/reduce_label.py
    - ${reduce_label.deps.path_reduce_label_json}
    - ${reduce_label.deps.path_fsw_handshape_csv}
    outs:
    - ${reduce_label.outs.path_reduce_label_csv}

  split_by_folder:
    cmd: python3 big/src/stages/split_by_folder.py params.yaml
    deps:
    - big/src/stages/split_by_folder.py
    - ${split_by_folder.deps.path_reduce_label_csv}
    outs:
    - ${split_by_folder.outs.path_train_val_test_csv}
    - ${split_by_folder.outs.path_test2_csv}

  split_trainval_test:
    cmd: python3 big/src/stages/split_trainval_test.py params.yaml
    deps:
    - big/src/stages/split_trainval_test.py
    - ${split_trainval_test.deps.path_angle_19f_handshape_csv}
    params:
    - split_trainval_test.test_size
    - split_trainval_test.random_state
    outs:
    - ${split_trainval_test.outs.path_train_val_csv}
    - ${split_trainval_test.outs.path_test_csv}

  train_val_split:
    cmd: python3 big/src/stages/train_val_split.py params.yaml
    deps:
    - big/src/stages/train_val_split.py
    - ${train_val_split.deps.path_train_val_csv}
    params:
    - train_val_split.val_size
    - train_val_split.random_state
    outs:
    - ${train_val_split.outs.path_train_csv}
    - ${train_val_split.outs.path_val_csv}

  select_features:
    cmd: python3 big/src/stages/select_features.py params.yaml
    deps:
    - big/src/stages/select_features.py
    - ${select_features.deps.path_train_csv}
    - ${select_features.deps.path_val_csv}
    - ${select_features.deps.path_test_csv}
    outs:
    - ${select_features.outs.path_train_x}
    - ${select_features.outs.path_val_x}
    - ${select_features.outs.path_test_x}
    - ${select_features.outs.path_train_y}
    - ${select_features.outs.path_val_y}
    - ${select_features.outs.path_test_y}
  
  to_categorical:
    cmd: python3 big/src/stages/to_categorical.py params.yaml
    deps:
    - big/src/stages/to_categorical.py
    - ${to_categorical.deps.path_train_y}
    - ${to_categorical.deps.path_val_y}
    - ${to_categorical.deps.path_test_y}
    outs:
    - ${to_categorical.outs.path_skelet_hand_f63_json}
    - ${to_categorical.outs.path_train_y_encoder}
    - ${to_categorical.outs.path_val_y_encoder}
    - ${to_categorical.outs.path_test_y_encoder}

  train:
    cmd: python3 big/src/stages/train.py params.yaml
    deps:
    - big/src/stages/train.py
    - ${train.deps.path_train_x}
    - ${train.deps.path_val_x}
    - ${train.deps.path_train_y_encoder}
    - ${train.deps.path_val_y_encoder}
    params:
    - train.epochs
    outs:
    - ${train.outs.path_model}
    plots:
    - ${train.plots.path_history}:
        #cache: false
        x: epoch
        y: val_accuracy
        title: Train history

  predict:
    cmd: python3 big/src/stages/predict.py params.yaml
    deps:
      - big/src/stages/predict.py
      - ${predict.deps.path_model}
      - ${predict.deps.path_train_x}
      - ${predict.deps.path_val_x}
      - ${predict.deps.path_test_x}
    outs:
      - ${predict.outs.path_train_y_pred}
      - ${predict.outs.path_val_y_pred}
      - ${predict.outs.path_test_y_pred}
      - ${predict.outs.path_train_y_pred_proba}
      - ${predict.outs.path_val_y_pred_proba}
      - ${predict.outs.path_test_y_pred_proba}
    #metrics:
    #- ${predict.metrics.path_report_predict}:
    #    cache: false

  evaluate:
    cmd: python3 big/src/stages/evaluate.py params.yaml
    deps:
      - big/src/stages/evaluate.py
      - ${evaluate.deps.path_train_y}
      - ${evaluate.deps.path_train_y_pred}
      - ${evaluate.deps.path_train_y_pred_proba}
      - ${evaluate.deps.path_val_y}
      - ${evaluate.deps.path_val_y_pred}
      - ${evaluate.deps.path_val_y_pred_proba}
      - ${evaluate.deps.path_test_y}
      - ${evaluate.deps.path_test_y_pred}
      - ${evaluate.deps.path_test_y_pred_proba}
    metrics:
    - ${evaluate.metrics.path_report_train}
        #cache: false
    - ${evaluate.metrics.path_report_val}
        #cache: false
    - ${evaluate.metrics.path_report_test}
        #cache: false

  app:
    cmd: python3 big/src/stages/app.py params.yaml
    deps:
      - big/src/stages/app.py
      - ${app.deps.path_model}
      - ${app.deps.path_skelet_hand_f63_json}
      - ${app.deps.path_video_folders}
    metrics:
      - ${app.metrics.path_reports_app}:
         cache: true   

    # TODO dvc_params_yaml
    # После dvc repro автоматически перезаписать с dvc.yaml и params.yaml на big/dvc.yaml и big/params.yaml